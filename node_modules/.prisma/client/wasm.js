
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  papel: 'papel',
  senhaHash: 'senhaHash'
};

exports.Prisma.AssetScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo',
  fabricante: 'fabricante',
  modelo: 'modelo',
  ip: 'ip',
  zona: 'zona',
  criticidade: 'criticidade'
};

exports.Prisma.IndicatorScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  pattern: 'pattern',
  severidade: 'severidade',
  fonte: 'fonte',
  validadeInicio: 'validadeInicio',
  validadeFim: 'validadeFim'
};

exports.Prisma.ThreatEntityScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.IndicatorThreatScalarFieldEnum = {
  id: 'id',
  indicatorId: 'indicatorId',
  threatId: 'threatId'
};

exports.Prisma.OT_EventScalarFieldEnum = {
  id: 'id',
  ts: 'ts',
  protocolo: 'protocolo',
  srcIp: 'srcIp',
  dstIp: 'dstIp',
  funcao: 'funcao',
  valor: 'valor',
  anomalia: 'anomalia',
  assetId: 'assetId'
};

exports.Prisma.SightingScalarFieldEnum = {
  id: 'id',
  ts: 'ts',
  count: 'count',
  indicatorId: 'indicatorId',
  assetId: 'assetId'
};

exports.Prisma.CaseScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  status: 'status',
  responsavel: 'responsavel',
  criadoEm: 'criadoEm'
};

exports.Prisma.EvidenceScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  caminho: 'caminho',
  hashSha256: 'hashSha256',
  coletadoEm: 'coletadoEm',
  tamanho: 'tamanho',
  caseId: 'caseId'
};

exports.Prisma.CustodyScalarFieldEnum = {
  id: 'id',
  acao: 'acao',
  ator: 'ator',
  local: 'local',
  ts: 'ts',
  assinatura: 'assinatura',
  evidenceId: 'evidenceId'
};

exports.Prisma.AttackScenarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  protocolo: 'protocolo',
  tecnicaMITRE: 'tecnicaMITRE'
};

exports.Prisma.AttackRunScalarFieldEnum = {
  id: 'id',
  tsInicio: 'tsInicio',
  tsFim: 'tsFim',
  status: 'status',
  scenarioId: 'scenarioId',
  userId: 'userId',
  assetId: 'assetId'
};

exports.Prisma.AttackResultScalarFieldEnum = {
  id: 'id',
  sucesso: 'sucesso',
  impacto: 'impacto',
  logs: 'logs',
  iocsGerados: 'iocsGerados',
  runId: 'runId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Asset: 'Asset',
  Indicator: 'Indicator',
  ThreatEntity: 'ThreatEntity',
  IndicatorThreat: 'IndicatorThreat',
  OT_Event: 'OT_Event',
  Sighting: 'Sighting',
  Case: 'Case',
  Evidence: 'Evidence',
  Custody: 'Custody',
  AttackScenario: 'AttackScenario',
  AttackRun: 'AttackRun',
  AttackResult: 'AttackResult'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
